
@model IEnumerable<HRDemoAdmin.Services.Models.LeaveResponse>
@{
    ViewData["Title"] = "Leaves";
    var grid = new WebGrid(source: Model, canPage: true, rowsPerPage: 10);

    var typeOptions = Enum
        .GetValues(typeof(LeaveType))
        .Cast<LeaveType>()
        .Select(e => new SelectListItem
        {
            Text = e.ToString(),
            Value = e.ToString()
        });
}

<div class="my-2 d-flex justify-content-between align-items-center">
    <h2 class="title">Leaves</h2>
    @Html.ActionLink("Create New Leave", "Create")
</div>

<form method="get" class="row g-2 align-items-end mb-4">
    <div class="col-auto">
        <label for="employeeEmail" class="col-form-label">Employee:</label>
        <input type="email" id="employeeEmail" name="employeeEmail" class="form-control" value="@Context.Request.QueryString.Get("employeeEmail")">
    </div>
    <div class="col-auto">
        <label for="type" class="col-form-label">Type:</label>
        @Html.DropDownList("type", typeOptions, "-- Select Type --", new { @class = "form-control" })
    </div>
    <div class="col-auto">
        <label for="startDate" class="col-form-label">Start Date:</label>
        <input type="datetime-local" id="startDate" name="startDate" class="form-control" value="@Context.Request.QueryString.Get("startDate")">
    </div>
    <div class="col-auto">
        <label for="endDate" class="col-form-label">End Date:</label>
        <input type="datetime-local" id="endDate" name="endDate" class="form-control" value="@Context.Request.QueryString.Get("endDate")">
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

@grid.GetHtml(
    tableStyle: "table table-bordered table-striped",
    headerStyle: "header sortable-header",
    rowStyle: "table-row",
    columns: grid.Columns(
        grid.Column("LeaveID", "ID", format: item => new HtmlString($"<a href='/Leaves/Details/{item.LeaveId}'>Leave #{item.LeaveId}</a>"), style: "column-small", canSort: true),
        grid.Column("Employee", format: item => new HtmlString(
            item.Employee == null ? "<span>-</span>" :
            $"<a href='/Employees/Details/{item.Employee.EmployeeID}'>" +
            $"{item.Employee.FirstName} {item.Employee.LastName}" +
            $"</a> "+
            $"<br/>{item.Employee.Email}"
            ), style: "column-medium", canSort: false),
        grid.Column("Type", style: "column-small", canSort: true),
        grid.Column("StartDate", "Start Date", format: item => item.StartDate.ToString("M/d/yyyy h:mm tt"), style: "column-medium", canSort: true),
        grid.Column("EndDate", "End Date", format: item => item.EndDate.ToString("M/d/yyyy h:mm tt"), style: "column-medium", canSort: true),
        grid.Column("Reason", style: "column-large", canSort: false)
    ),
    footerStyle: "hidden"
)

<!-- Custom Pagination -->
<div class="custom-pagination">
    @grid.Pager(WebGridPagerModes.NextPrevious | WebGridPagerModes.Numeric,
                previousText: "← Prev",
                nextText: "Next →")
</div>

