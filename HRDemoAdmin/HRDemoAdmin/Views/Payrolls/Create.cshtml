@model HRDemoAdmin.Services.Models.PayrollRequest

@{
    var yearOptions = new int[] { DateTime.Now.Year, DateTime.Now.Year - 1 }
    .Select(e => new SelectListItem
    {
        Text = e.ToString(),
        Value = e.ToString()
    });

    var monthOptions = System.Globalization.DateTimeFormatInfo.InvariantInfo.MonthNames
        .Where(m => !string.IsNullOrEmpty(m))
        .Select((m, i) => new SelectListItem
        {
            Text = m,
            Value = (i + 1).ToString()
        });

    var reportData = ViewBag.reportData;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create New Payroll</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row g-2 mb-2 align-items-end">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.employeeEmail, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.employeeEmail, new { htmlAttributes = new { @class = "form-control", @id = "employee-email" } })
                </div>
            </div>

            <div class="form-group col-md-1">
                @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(model => model.year, yearOptions, new { @class = "form-control", @id = "selected-year" })
                </div>
            </div>

            <div class="form-group col-md-2">
                @Html.LabelFor(model => model.month, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(model => model.month, new SelectList(monthOptions, "Value", "Text", DateTime.Now.Month.ToString()), new { @class = "form-control", @id = "selected-month" })
                </div>
            </div>
            <button type="submit" class="btn btn-primary col-md-2" name="buttonType" value="Report">Get Employee Report</button>
        </div>
        @Html.ValidationMessageFor(model => model.employeeEmail, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.month, "", new { @class = "text-danger" })

        <input type="number" name="offset" id="tz-offset-input" hidden />
        @if (reportData != null)
        {
            <hr />
            <div id="employeeReport">
                <p class="m-0">Employee: @reportData.FirstName @reportData.LastName (@reportData.State, @reportData.Country)</p>
                <p class="m-0">
                    Annual Salary: @reportData.AnnualSalary
                </p>
                <p class="m-0">Present Days: @reportData.PresentDays</p>
                <p class="m-0">Late Days: @reportData.LateDays</p>
                <p class="m-0">
                    Leave Days: @reportData.LeaveDays
                    (Sick: @reportData.SickLeave, Casual: @reportData.CasualLeave, Parental: @reportData.ParentalLeave, Bereavement: @reportData.BereavementLeave, Unpaid: @reportData.UnpaidLeave)
                </p>
            </div>
            <hr />
        }

        <h6>Salary</h6>

        <div class="mx-4 mt-1">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.salary.grossAmount, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.salary.grossAmount, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.salary.grossAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.salary.preTaxDeduction, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.salary.preTaxDeduction, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.salary.preTaxDeduction, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.salary.taxDeduction, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.salary.taxDeduction, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.salary.taxDeduction, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.salary.postTaxDeduction, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.salary.postTaxDeduction, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.salary.postTaxDeduction, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group mt-4">
            <div class="col-md-offset-2">
                <input type="submit" name="buttonType" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="mt-2">
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(document).ready(function () {
        $("#tz-offset-input").val(-1 * new Date().getTimezoneOffset());
    });
</script>
