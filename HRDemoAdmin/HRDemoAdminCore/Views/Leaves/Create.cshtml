@model HRDemoAdmin.Services.Models.LeaveRequest

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create New Leave</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row g-2 mb-2">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.employeeEmail, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.employeeEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employeeEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(model => model.type, Html.GetEnumSelectList<HRDemoAdmin.Services.Models.LeaveType>(), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group mb-2 col-md-8">
            @Html.LabelFor(model => model.reason, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.reason, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.reason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row g-2 mb-2">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.startDate, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local"} })
                    @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.endDate, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group mt-2">
            <div class="col-md-offset-2">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="mt-2">
    @Html.ActionLink("Back to List", "Index")
</div>
