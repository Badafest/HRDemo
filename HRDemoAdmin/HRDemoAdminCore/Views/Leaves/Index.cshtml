
@using Microsoft.AspNetCore.Html;
@using NonFactors.Mvc.Grid;

@model IEnumerable<HRDemoAdmin.Services.Models.LeaveResponse>
@{
    ViewData["Title"] = "Leaves";

    var grid = @Html.Grid(Model).Build(columns =>
    {
        columns.Add(model => model.LeaveID)
            .Titled("ID")
            .RenderedAs(model => Html.Raw($"<a href='/Leaves/Details/{model.LeaveID}'>Leave #{model.LeaveID}</a>"))
            .Css("column-small")
            .Sortable(true);

        columns.Add(model => model.Employee)
            .Titled("Employee")
            .RenderedAs(model => model.Employee == null
                ? Html.Raw("<span>-</span>")
                : Html.Raw($"<a href='/Employees/Details/{model.Employee.EmployeeID}'>" +
                           $"{model.Employee.FirstName} {model.Employee.LastName}" +
                           $"</a><br/>{model.Employee.Email}"))
            .Css("column-medium")
            .Sortable(false);

        columns.Add(model => model.Type)
            .Titled("Type")
            .Css("column-small")
            .Sortable(true);

        columns.Add(model => model.StartDate)
            .Titled("Start Date")
            .RenderedAs(model => model.StartDate.ToString("M/d/yyyy h:mm tt"))
            .Css("column-medium")
            .Sortable(true);

        columns.Add(model => model.EndDate)
            .Titled("End Date")
            .RenderedAs(model => model.EndDate.ToString("M/d/yyyy h:mm tt"))
            .Css("column-medium")
            .Sortable(true);

        columns.Add(model => model.Reason)
            .Titled("Reason")
            .Css("column-large")
            .Sortable(false);
    })
    .Pageable(pager =>
    {
        pager.CssClasses = "custom-pagination";
        pager.RowsPerPage = 10;
    })
    .Css("table table-bordered table-striped")
    .Empty("No records found.");
   
    var typeOptions = Enum
        .GetValues(typeof(LeaveType))
        .Cast<LeaveType>()
        .Select(e => new SelectListItem
        {
            Text = e.ToString(),
            Value = e.ToString()
        });
}

<div class="my-2 d-flex justify-content-between align-items-center">
    <h2 class="title">Leaves</h2>
    @Html.ActionLink("Create New Leave", "Create")
</div>

<form method="get" class="row g-2 align-items-end mb-4">
    <div class="col-auto">
        <label for="employeeEmail" class="col-form-label">Employee:</label>
        <input type="email" id="employeeEmail" name="employeeEmail" class="form-control" value="@Context.Request.Query["employeeEmail"]">
    </div>
    <div class="col-auto">
        <label for="type" class="col-form-label">Type:</label>
        @Html.DropDownList("type", typeOptions, "-- Select Type --", new { @class = "form-control" })
    </div>
    <div class="col-auto">
        <label for="startDate" class="col-form-label">Start Date:</label>
        <input type="datetime-local" id="startDate" name="startDate" class="form-control" value="@Context.Request.Query["startDate"]">
    </div>
    <div class="col-auto">
        <label for="endDate" class="col-form-label">End Date:</label>
        <input type="datetime-local" id="endDate" name="endDate" class="form-control" value="@Context.Request.Query["endDate"]">
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

@grid

