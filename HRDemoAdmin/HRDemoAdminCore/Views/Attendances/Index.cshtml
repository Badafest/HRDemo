
@using Microsoft.AspNetCore.Html
@using NonFactors.Mvc.Grid

@model IEnumerable<HRDemoAdmin.Services.Models.AttendanceResponse>
@{
    ViewData["Title"] = "Attendances";
    var grid = Html.Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => model.AttendanceID)
                   .Titled("ID")
                   .RenderedAs(item => new HtmlString($"<a href='/Attendances/Details/{item.AttendanceID}'>Attendance #{item.AttendanceID}</a>"))
                   .Css("column-small")
                   .Sortable(true);

            columns.Add(model => model.Employee)
                   .Titled("Employee")
                   .RenderedAs(item => item.Employee == null
                        ? new HtmlString("<span>-</span>")
                        : new HtmlString(
                            $"<a href='/Employees/Details/{item.Employee.EmployeeID}'>" +
                            $"{item.Employee.FirstName} {item.Employee.LastName}</a><br/>{item.Employee.Email}"))
                   .Css("column-medium")
                   .Sortable(false);

            columns.Add(model => model.Date)
                   .Titled("Date")
                   .RenderedAs(item => item.Date.ToString("M/d/yyyy"))
                   .Css("column-medium")
                   .Sortable(true);

            columns.Add(model => model.CheckInTime)
                   .Titled("Check In Time")
                   .RenderedAs(item => item.CheckInTime.ToString("h:mm tt"))
                   .Css("column-medium")
                   .Sortable(false);

            columns.Add(model => model.CheckOutTime)
                   .Titled("Check Out Time")
                   .RenderedAs(item => item.CheckOutTime.ToString("h:mm tt"))
                   .Css("column-medium")
                   .Sortable(false);

            columns.Add(model => model.Status)
                   .Titled("Status")
                   .Css("column-medium")
                   .Sortable(true);
        })
        .Pageable(pager =>
        {
            pager.CssClasses = "custom-pagination";
            pager.RowsPerPage = 10;
        })
        .Css("table table-bordered table-striped")
        .Empty("No records found.");

}

<div class="my-2 d-flex justify-content-between align-items-center">
    <h2 class="title">Attendances</h2>
    @Html.ActionLink("Create New Attendance", "Create")
</div>

<form method="get" class="row g-2 align-items-end mb-4">
    <div class="col-auto">
        <label for="employeeEmail" class="col-form-label">Employee:</label>
        <input type="email" id="employeeEmail" name="employeeEmail" class="form-control" value="@Context.Request.Query["employeeEmail"]"/>
    </div>
    <div class="col-auto">
        <label for="startDate" class="col-form-label">Start Date:</label>
        <input type="datetime-local" id="startDate" name="startDate" class="form-control" value="@Context.Request.Query["startDate"]"/>
    </div>
    <div class="col-auto">
        <label for="endDate" class="col-form-label">End Date:</label>
        <input type="datetime-local" id="endDate" name="endDate" class="form-control" value="@Context.Request.Query["endDate"]"/>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

@grid

