
@using NonFactors.Mvc.Grid;

@model IEnumerable<HRDemoAdmin.Services.Models.EmployeeResponse>
@{
    ViewData["Title"] = "Employees";
    var grid = @Html.Grid(Model).Build(columns =>
        {
            columns.Add(model => model.EmployeeID)
                .Titled("ID")
                .Css("column-small");

            columns.Add(model => model.FirstName + " " + model.LastName)
                .Titled("Name")
                .RenderedAs(model => Html.Raw($"<a href='./Employees/Details/{model.EmployeeID}'>{model.FirstName} {model.LastName}</a>"))
                .Css("column-medium");

            columns.Add(model => model.JobTitle)
                .Titled("Job Title")
                .Css("column-medium");

            columns.Add(model => model.Status)
                .Titled("Status")
                .Css("column-small");

            columns.Add(model => model.Department)
                .Titled("Department")
                .RenderedAs(model => model.Department == null
                    ? Html.Raw("<span>-</span>")
                    : Html.Raw($"<a href='/Departments/Details/{model.Department.DepartmentID}'>{model.Department.Name}</a>"))
                .Css("column-medium");

            columns.Add(model => model.Email)
                .Titled("Email")
                .Css("column-medium");

            columns.Add(model => model.Phone)
                .Titled("Phone Number")
                .Css("column-medium");

            columns.Add(model => model.Address)
                .Titled("Address")
                .RenderedAs(model => Html.Raw($"<address>" +
                    $"<div>{model.Address?.Line1}</div>" +
                    $"<div>{model.Address?.Line2}</div>" +
                    $"<div>{model.Address?.PostalCode}, {model.Address?.City}, {model.Address?.State}, {model.Address?.Country}</div>" +
                    $"</address>"))
                .Css("column-medium");
        })
        .Pageable(pager =>
        {
            pager.CssClasses = "custom-pagination";
            pager.RowsPerPage = 3;
        })
        .Css("table table-bordered table-striped")
        .Empty("No records found.");
}

<div class="my-2 d-flex justify-content-between align-items-center">
    <h2 class="title">Employees</h2>
    @Html.ActionLink("Create New Employee", "Create")
</div>

<form method="get" class="row g-2 align-items-end mb-4">
    <div class="col-auto">
        <label for="firstName" class="col-form-label">First Name:</label>
        <input type="text" id="firstName" name="firstName" class="form-control" value="@Context.Request.Query["firstName"]">
    </div>
    <div class="col-auto">
        <label for="lastName" class="col-form-label">Last Name:</label>
        <input type="text" id="lastName" name="lastName" class="form-control" value="@Context.Request.Query["lastName"]">
    </div>
    <div class="col-auto">
        <label for="jobTitle" class="col-form-label">Job Title:</label>
        <input type="text" id="jobTitle" name="jobTitle" class="form-control" value="@Context.Request.Query["jobTitle"]">
    </div>
    <div class="col-auto">
        <label for="email" class="col-form-label">Email:</label>
        <input type="text" id="email" name="email" class="form-control" value="@Context.Request.Query["email"]">
    </div>
    <div class="col-auto">
        <label for="phone" class="col-form-label">Phone Number:</label>
        <input type="text" id="phone" name="phone" class="form-control" value="@Context.Request.Query["phone"]">
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

@grid
